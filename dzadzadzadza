    local NukeScript = "NukeVsCity"
    plr = game:GetService'Players'.LocalPlayer
    local premium = false
    local ALT = false
    if plr.MembershipType == Enum.MembershipType.Premium then
        premium = true
    elseif plr.MembershipType == Enum.MembershipType.None then
        premium = false
    end
    if premium == false then 
        if plr.AccountAge <= 10 then 
            ALT = true
        end
    end
    
    local market = game:GetService("MarketplaceService")
    local info = market:GetProductInfo(game.PlaceId, Enum.InfoType.Asset)
    
    
    local http_request = http_request;
    if syn then
        http_request = syn.request
    elseif SENTINEL_V2 then
        function http_request(tb)
            return {
                StatusCode = 200;
                Body = request(tb.Url, tb.Method, (tb.Body or ''))
            }
        end
    end
    local function getexploit()
        local exploit =
            (syn and not is_sirhurt_closure and not pebc_execute and "Synapse X") or
            (secure_load and "Sentinel") or
            (is_sirhurt_closure and "Sirhurt") or
            (pebc_execute and "ProtoSmasher") or
            (KRNL_LOADED and "Krnl") or
            (WrapGlobal and "WeAreDevs") or
            (isvm and "Proxo") or
            (shadow_env and "Shadow") or
            (jit and "EasyExploits") or
            (getscriptenvs and "Calamari") or
            (unit and not syn and "Unit") or
            (OXYGEN_LOADED and "Oxygen U") or
            (IsElectron and "Electron") or
            ("Unsupported")
      
        return exploit
      end
    
    local body = http_request({Url = 'https://httpbin.org/get'; Method = 'GET'}).Body;
    local decoded = game:GetService('HttpService'):JSONDecode(body)
    local hwid_list = {"Syn-Fingerprint", "Exploit-Guid", "Proto-User-Identifier", "Sentinel-Fingerprint", "Krnl-Hwid"};
    hwid = "";
    local blacklisted = ("")
    
    for i, v in next, hwid_list do
        if decoded.headers[v] then
            hwid = decoded.headers[v];
            break
        end
    end
    local OSTime = os.time();
    local Time = os.date('!*t', OSTime);
    local Avatar = 'https://cdn.discordapp.com/embed/avatars/4.png';
    local Content = '';
    local Embed = {
        title = 'Script Logger';
        color = 000255000;
        footer = { 
          text = plr.name;
          icon_url = 'https://www.roblox.com/bust-thumbnail/image?userId='.. plr.UserId ..'&width=420&height=420&format=png'
       };
        fields = {
            {
                name = 'Correct Key:';
                value = "Yes";
                inline = true
            },
            {
                name = 'Script';
                value = NukeScript;
                inline = true
            },
            {
                name = 'GameName:';
                value = info.Name;
                inline = true
            },
            {
                name = 'Key Used:';
                value = "he",
                inline = true
            },
            {
                name = 'GameLink:';
                value = "[Click here!](https://roblox.com/games/" .. game.PlaceId .. "/)";
                inline = true
            },
            {
                name = 'Exploit:';
                value = getexploit();
                inline = true
            }
        };
        timestamp = string.format('%d-%d-%dT%02d:%02d:%02dZ', Time.year, Time.month, Time.day, Time.hour, Time.min, Time.sec);
    };
    (syn and syn.request or http_request) {
        Url = "https://discord.com/api/webhooks/896345000852475936/gz5pWbr9QyeZd1pzb-t8WiDFal66KrmYuVP7X1qM8TVtOA13wm_HU1Tw3vT6oAragfhO";
        Method = 'POST';
        Headers = {
            ['Content-Type'] = 'application/json';
        };
        Body = game:GetService'HttpService':JSONEncode( { content = Content; embeds = { Embed } } );
    };
print("Sended To : ".."https://discord.com/api/webhooks/896345000852475936/gz5pWbr9QyeZd1pzb-t8WiDFal66KrmYuVP7X1qM8TVtOA13wm_HU1Tw3vT6oAragfhO")
